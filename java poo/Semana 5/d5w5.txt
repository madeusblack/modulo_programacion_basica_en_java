/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Madeus
 */
public class cuentaBancaria {
    private String nombreCliente;
    private String numeroCuenta;
    private double saldo;
    cuentaBancaria(){};
    cuentaBancaria(String nombreCliente,String numeroCuenta, double saldo){
    this.nombreCliente=nombreCliente;
    this.numeroCuenta=numeroCuenta;
    this.saldo=saldo;
    }
    public void setNombreCliente(String nombreCliente){
    this.nombreCliente=nombreCliente;
    }
    public void setNumeroCuenta(String numeroCuenta){
    this.numeroCuenta=numeroCuenta;
    }
    public void setSaldo(double saldo){
    this.saldo=saldo;
    }
    public String getNombreCliente(){
    return this.nombreCliente;
    }
    public String getNumeroCuenta(){
    return this.numeroCuenta;
    }
    public double getSaldo(){
    return this.saldo;
    }
    public String deposito(double montoDeposito){
    double saldoPrevio = getSaldo();
    setSaldo(saldoPrevio+montoDeposito);
    return "su saldo era $"+saldoPrevio+" su nuevo saldo es $"+getSaldo(); 
    }
    public String giro(double montoGiro){
        double saldoPrevio = getSaldo();
        if(montoGiro<saldoPrevio){
            setSaldo(saldoPrevio-montoGiro);
            return "giro exitosamente $"+montoGiro+" su nuevo saldo es "+getSaldo();
        }else{
            return "saldo insuficiente para realizar la transacción";
        }
    }
    public String transferencia(double montoTransferencia,String numeroCuentaDestino,String nombreClienteDestino){
        double saldoPrevio = getSaldo();
        if(montoTransferencia<saldoPrevio){
            setSaldo(saldoPrevio-montoTransferencia);
            return "transfirio exitosamente $"+montoTransferencia+" a la cuenta "+ numeroCuentaDestino +" perteneciente a el cliente "+nombreClienteDestino+" su nuevo saldo es "+getSaldo();
        }else{
            return "saldo insuficiente para realizar la transacción";
        }
    }    
    
}

import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Madeus
 */
public class cajero {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // TODO code application logic here
    boolean cuentaCreada=false;
    int continuar=0;
        String nombreCliente = JOptionPane.showInputDialog(
        null,
        "ingrese su nombre",
        JOptionPane.QUESTION_MESSAGE);
        String numeroCuenta = JOptionPane.showInputDialog(
        null,
        "ingrese su Numero de Cuenta",
        JOptionPane.QUESTION_MESSAGE); 
        cuentaBancaria cliente=new cuentaBancaria(nombreCliente,numeroCuenta,5000);
        cuentaCreada=true;
    while(continuar==0){    
        int seleccion = JOptionPane.showOptionDialog(
        null,
        "Que operacion desea realizar?", 
        "Red de cajeros Trencitobank",
        JOptionPane.YES_NO_CANCEL_OPTION,
        JOptionPane.QUESTION_MESSAGE,
        null,    // null para icono por defecto.
        new Object[] { "Consulta Saldo", "Deposito", "Giro","transferencia" },   // null para YES, NO y CANCEL
        "Consulta Saldo");    
        switch(seleccion){
            case 0:
                JOptionPane.showMessageDialog(
                null,
                "su saldo es $"+ cliente.getSaldo());
                break;
            case 1:
                    String montoDeposito = JOptionPane.showInputDialog(
                    null,
                    "ingrese el monto que desea depositar",
                    JOptionPane.QUESTION_MESSAGE);  // el icono sera un iterrogante
                    int montoInt = Integer.parseInt(montoDeposito);

                    JOptionPane.showMessageDialog(
                    null,
                    cliente.deposito(montoInt) );     
                break;
            case 2:
                    String montoGiro = JOptionPane.showInputDialog(
                    null,
                    "su saldo es " + cliente.getSaldo() + " ingrese el monto que desea retirar",
                    JOptionPane.QUESTION_MESSAGE);  // el icono sera un iterrogante
                    int montoGiroInt = Integer.parseInt(montoGiro);
                    JOptionPane.showMessageDialog(
                    null,
                    cliente.giro(montoGiroInt) );     
                break;
            case 3:
                    String montoTransferencia = JOptionPane.showInputDialog(
                    null,
                    "su saldo es " + cliente.getSaldo() + " ingrese el monto que desea retirar",
                    JOptionPane.QUESTION_MESSAGE);  // el icono sera un iterrogante
                    int montoTransferenciaInt = Integer.parseInt(montoTransferencia);
                           String nombreTransferencia = JOptionPane.showInputDialog(
                    null,
                    "ingrese nombre de cliente de transferencia",
                    JOptionPane.QUESTION_MESSAGE);
                    String cuentaTransfenrecia = JOptionPane.showInputDialog(
                    null,
                    "ingrese su Numero de Cuenta de transferencia",
                    JOptionPane.QUESTION_MESSAGE); 
                    
                    cliente.transferencia(montoTransferenciaInt,cuentaTransfenrecia,nombreTransferencia);     
                break;
        } 
        continuar = JOptionPane.showOptionDialog(
        null,
        "Desea realizar otra operacion?", 
        "Red de cajeros Trencitobank",
        JOptionPane.YES_NO_OPTION,
        JOptionPane.QUESTION_MESSAGE,
        null,    // null para icono por defecto.
        new Object[] { "Si", "No" },   // null para YES, NO y CANCEL
        "No");

        }
    }
    
}

Reflexion: fue un experiencia bastante enriquecedora en cuanto a poner en practica lo aprendido
se agradece la permisividad del uso de otras librerias y poder comenzar a acostumbrarnos a leer documentacion y modificar los parametros entregados
